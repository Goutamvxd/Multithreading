defining a Thread By Implementing Runnable Interface
--------------------------------------------------------
we can define a thread by implementing runnable interface

runnable interface present in Java.Lang package
and it contains only one method that is run method----public void run(){}

----------------------------------------------------------
class MyRunnable implements Runnable{

	public void run(){\
	for(int i=0;i,5;i++){
		System.out.println("Child thread");

		// above task within for loop called as 

		//this code will be executed by the child thread
	}
	}
}
// complete above stape is known as  defining the therad
------
public class ThreadDemo{

public static void main(String[] args){

	MyRunnable r=new MyRunnable();
	Thread t=new Thread(r);   // r ->consider as target runnable
	t.start();

	for(int i=0;i<5;i++){
	System.out.println("Main Thread");
	}	

		//executed by the  main thread
	}
}

-------
we will  get mixed output & we cannot tell exact output

---------------------------------------------------------------------------------
case study:

MyRunnable r=new MyRunnable();
Thread t1=new Thread();
Thread t2=new Thread(r);
----------------------------------------------------------------------------------------------
case 1:  t1.start();
	
 A new Thread will be created which is responsible for the execution of thread class run method
Which has empty implementation	


-------------------------------------------------------------------------------------------------
case 2: t1.run();
	
No new Thread will be created and thread class run method will be executed just like a normal method call


-------------------------------------------------------------------------------------------------------
case 3: t2.start();

A new Thread will be created which is responsible for the execution of MyRunnable class run method

------------------------------------------------------------------------------------------------------------
case 4: t2.run();

A new Thread won't be created and MyRunnable run method will be executed just like a normal mathod call
------------------------------------------------------------------------------------------------------------
case 5: r.start();   ---> compile time : cannot find symbol :method start() location : class MyRunnanle

We will get compile time error saying :MyRunnable class doesn't have start capability
---------------------------------------------------------------------------------------------------------
case 6: r.run();

No new Thread will be created and MyRunnable run method will be executed like normal method call

-----------------------------------------------------------------------------------------------------------

Which approach is best to define a Thread

Among two ways of defining a thread
implemets Runnable approach is recommede

In the first approach our class always extends Thread class, There is no chance of extending any other class Hence
we are missing Inheritance Benifit


But in the second approach while implementing Runnable interface
we can extend any other class hence , we won't miss any Inheritance Benifit


because of above reason implementing Runnable interface approach is recommended then extending thread class